service: lawai-serverless

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  
  apiGateway:
    binaryMediaTypes:
      - 'application/pdf'
      - 'application/octet-stream'
      - '*/*'
  
  environment:
    COGNITO_CLIENT_ID: 1p3ks3hsp9a9p2jogk8h9km9
    COGNITO_CLIENT_SECRET: 152qllbnetkfmtfsec80jb5rlfm3cjg6m5hh8pqndt6e8q4rjgs
    COGNITO_USER_POOL_ID: us-east-1_1kLOdae9J
    S3_BUCKET_NAME: contractfiles1
    TEXTRACT_ENABLED: true
    BEDROCK_ENABLED: false
    BEDROCK_MODEL: anthropic.claude-3-sonnet-20240229-v1:0
    COGNITO_AUTO_UPDATE_CLIENT: false
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
        - s3:GetObjectVersion
      Resource:
        - "arn:aws:s3:::contractfiles1/*"
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        - "arn:aws:s3:::contractfiles1"
    - Effect: Allow
      Action:
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminGetUser
        - cognito-idp:AdminRespondToAuthChallenge
        - cognito-idp:InitiateAuth
        - cognito-idp:RespondToAuthChallenge
        - cognito-idp:GetUser
        - cognito-idp:SignUp
        - cognito-idp:ConfirmSignUp
        - cognito-idp:ForgotPassword
        - cognito-idp:ConfirmForgotPassword
        - cognito-idp:UpdateUserPoolClient
      Resource:
        - "arn:aws:cognito-idp:${aws:region}:${aws:accountId}:userpool/us-east-1_1kLOdae9J"
        - "arn:aws:cognito-idp:${aws:region}:${aws:accountId}:userpool/us-east-1_1kLOdae9J/*"
    - Effect: Allow
      Action:
        - textract:StartDocumentTextDetection
        - textract:GetDocumentTextDetection
      Resource: "*"
    - Effect: Allow
      Action:
        - bedrock:InvokeModel
      Resource: "*"

functions:
  api:
    handler: lambda-auth.handler
    timeout: 30
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

plugins:
  - serverless-dotenv-plugin

custom:
  dotenv:
    path: .env
    exclude:
      - AWS_REGION
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

package:
  exclude:
    - node_modules/**
    - .git/**
    - .env
    - README.md
    - .gitignore
  include:
    - node_modules/**
    - lambda.js
    - index.js
    - data/**
    - package.json